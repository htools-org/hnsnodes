# Handshake regtest

[ping]

# Logfile
logfile = log/ping.regtest.log
log_to_console = True

# Network magic number
magic_number = cf9538ae

# Redis database number
db = 1

# Max. number of concurrent workers (greenlets) in a pool
workers = 10

# Print debug output
debug = True

# Public IP address for network interface
source_address = 0.0.0.0

# Protocol version to use for outgoing version message
protocol_version = 3

# User agent (BIP 0014) to use for outgoing version message
# -----------------------------------------------------------------------------
#                                 NOTE TO USERS
# Please consider changing the user agent before running an instance of this
# crawler. This is so that users will not confuse your crawler with another
# instance that is already running and generating data for the project.
# -----------------------------------------------------------------------------
user_agent = /hnsnodes:0.0-dev/

# Services to use for outgoing network address message
services = 1

# Set to 1 to receive all txs
relay = 1

# Socket timeout
socket_timeout = 5

# Run cron tasks every given interval (how often do you check for state change)
cron_delay = 10

# Limit max. nodes per IPv6 network prefix
ipv6_prefix = 64
nodes_per_ipv6_prefix = 1

# Redis TTL for cached RTT
rtt_ttl = 10800         # 3 hours

# Redis TTL for cached block inv messages
inv_ttl = 10800         # 3 hours

# Check version every given interval
version_delay = 86400   # 24 hours

# Attempt to establish connection with .onion nodes
onion = False

# Tor proxy is required to connect to .onion address
tor_proxies =
    127.0.0.1:9050

# Relative path to directory containing timestamp-prefixed JSON crawl files
crawl_dir = data/crawl/regtest
